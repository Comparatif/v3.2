/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../../../graphql/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Auth: { // root type
    col?: number | null; // Int
    dashboard?: boolean | null; // Boolean
    email?: string | null; // String
    id?: number | null; // Int
    row?: number | null; // Int
    shop?: string | null; // String
    test?: boolean | null; // Boolean
  }
  Edge: { // root type
    cursor?: string | null; // String
    node?: NexusGenRootTypes['Order'] | null; // Order
  }
  Mutation: {};
  Order: { // root type
    accepted?: boolean | null; // Boolean
    acceptedAt?: string | null; // String
    acceptedBy?: string | null; // String
    adresses?: string | null; // String
    canceled?: boolean | null; // Boolean
    canceledAt?: string | null; // String
    canceledBy?: string | null; // String
    canceledWhy?: string | null; // String
    categories?: string | null; // String
    city?: string | null; // String
    countryName?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    emailVerified?: NexusGenScalars['DateTime'] | null; // DateTime
    facebook?: string | null; // String
    firstName?: string | null; // String
    fix1?: string | null; // String
    horaires?: string | null; // String
    id?: string | null; // String
    instagram?: string | null; // String
    lastName?: string | null; // String
    livraison?: string | null; // String
    localisation?: string | null; // String
    marques?: string | null; // String
    orderId?: string | null; // String
    paiement?: string | null; // String
    pending?: boolean | null; // Boolean
    phoneNumber?: string | null; // String
    product_commune?: string | null; // String
    product_country?: string | null; // String
    product_imagelinks?: string | null; // String
    product_links?: string | null; // String
    product_names?: string | null; // String
    product_price?: number | null; // Int
    shopEmail?: string | null; // String
    shop_commune?: string | null; // String
    shop_website?: string | null; // String
    sold?: boolean | null; // Boolean
    soldAt?: string | null; // String
    soldBy?: string | null; // String
    stocks?: string | null; // String
    telephone1?: string | null; // String
    telephone2?: string | null; // String
    type?: string | null; // String
    updatedAt?: NexusGenScalars['DateTime'] | null; // DateTime
    userEmail?: string | null; // String
    user_commune?: string | null; // String
    vendeurs?: string | null; // String
    vendeurs_image?: string | null; // String
    villes1?: string | null; // String
  }
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage?: boolean | null; // Boolean
    hasPrevPage?: boolean | null; // Boolean
    startCursor?: string | null; // String
  }
  Query: {};
  Response: { // root type
    edges?: Array<NexusGenRootTypes['Edge'] | null> | null; // [Edge]
    pageInfo?: NexusGenRootTypes['PageInfo'] | null; // PageInfo
  }
  Settings: { // root type
    enableOrder?: boolean | null; // Boolean
    enableRightClick?: boolean | null; // Boolean
    settingsId?: string | null; // String
    showShop?: boolean | null; // Boolean
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Auth: { // field return type
    col: number | null; // Int
    dashboard: boolean | null; // Boolean
    email: string | null; // String
    id: number | null; // Int
    row: number | null; // Int
    shop: string | null; // String
    test: boolean | null; // Boolean
  }
  Edge: { // field return type
    cursor: string | null; // String
    node: NexusGenRootTypes['Order'] | null; // Order
  }
  Mutation: { // field return type
    deleteOrder: NexusGenRootTypes['Order']; // Order!
    updateOrder: NexusGenRootTypes['Order']; // Order!
  }
  Order: { // field return type
    accepted: boolean | null; // Boolean
    acceptedAt: string | null; // String
    acceptedBy: string | null; // String
    adresses: string | null; // String
    canceled: boolean | null; // Boolean
    canceledAt: string | null; // String
    canceledBy: string | null; // String
    canceledWhy: string | null; // String
    categories: string | null; // String
    city: string | null; // String
    countryName: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    emailVerified: NexusGenScalars['DateTime'] | null; // DateTime
    facebook: string | null; // String
    firstName: string | null; // String
    fix1: string | null; // String
    horaires: string | null; // String
    id: string | null; // String
    instagram: string | null; // String
    lastName: string | null; // String
    livraison: string | null; // String
    localisation: string | null; // String
    marques: string | null; // String
    orderId: string | null; // String
    paiement: string | null; // String
    pending: boolean | null; // Boolean
    phoneNumber: string | null; // String
    product_commune: string | null; // String
    product_country: string | null; // String
    product_imagelinks: string | null; // String
    product_links: string | null; // String
    product_names: string | null; // String
    product_price: number | null; // Int
    shopEmail: string | null; // String
    shop_commune: string | null; // String
    shop_website: string | null; // String
    sold: boolean | null; // Boolean
    soldAt: string | null; // String
    soldBy: string | null; // String
    stocks: string | null; // String
    telephone1: string | null; // String
    telephone2: string | null; // String
    type: string | null; // String
    updatedAt: NexusGenScalars['DateTime'] | null; // DateTime
    userEmail: string | null; // String
    user_commune: string | null; // String
    vendeurs: string | null; // String
    vendeurs_image: string | null; // String
    villes1: string | null; // String
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean | null; // Boolean
    hasPrevPage: boolean | null; // Boolean
    startCursor: string | null; // String
  }
  Query: { // field return type
    orders: NexusGenRootTypes['Response'] | null; // Response
  }
  Response: { // field return type
    edges: Array<NexusGenRootTypes['Edge'] | null> | null; // [Edge]
    pageInfo: NexusGenRootTypes['PageInfo'] | null; // PageInfo
  }
  Settings: { // field return type
    enableOrder: boolean | null; // Boolean
    enableRightClick: boolean | null; // Boolean
    settingsId: string | null; // String
    showShop: boolean | null; // Boolean
  }
}

export interface NexusGenFieldTypeNames {
  Auth: { // field return type name
    col: 'Int'
    dashboard: 'Boolean'
    email: 'String'
    id: 'Int'
    row: 'Int'
    shop: 'String'
    test: 'Boolean'
  }
  Edge: { // field return type name
    cursor: 'String'
    node: 'Order'
  }
  Mutation: { // field return type name
    deleteOrder: 'Order'
    updateOrder: 'Order'
  }
  Order: { // field return type name
    accepted: 'Boolean'
    acceptedAt: 'String'
    acceptedBy: 'String'
    adresses: 'String'
    canceled: 'Boolean'
    canceledAt: 'String'
    canceledBy: 'String'
    canceledWhy: 'String'
    categories: 'String'
    city: 'String'
    countryName: 'String'
    createdAt: 'DateTime'
    emailVerified: 'DateTime'
    facebook: 'String'
    firstName: 'String'
    fix1: 'String'
    horaires: 'String'
    id: 'String'
    instagram: 'String'
    lastName: 'String'
    livraison: 'String'
    localisation: 'String'
    marques: 'String'
    orderId: 'String'
    paiement: 'String'
    pending: 'Boolean'
    phoneNumber: 'String'
    product_commune: 'String'
    product_country: 'String'
    product_imagelinks: 'String'
    product_links: 'String'
    product_names: 'String'
    product_price: 'Int'
    shopEmail: 'String'
    shop_commune: 'String'
    shop_website: 'String'
    sold: 'Boolean'
    soldAt: 'String'
    soldBy: 'String'
    stocks: 'String'
    telephone1: 'String'
    telephone2: 'String'
    type: 'String'
    updatedAt: 'DateTime'
    userEmail: 'String'
    user_commune: 'String'
    vendeurs: 'String'
    vendeurs_image: 'String'
    villes1: 'String'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPrevPage: 'Boolean'
    startCursor: 'String'
  }
  Query: { // field return type name
    orders: 'Response'
  }
  Response: { // field return type name
    edges: 'Edge'
    pageInfo: 'PageInfo'
  }
  Settings: { // field return type name
    enableOrder: 'Boolean'
    enableRightClick: 'Boolean'
    settingsId: 'String'
    showShop: 'Boolean'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    deleteOrder: { // args
      id: string; // String!
    }
    updateOrder: { // args
      accepted?: boolean | null; // Boolean
      acceptedAt?: string | null; // String
      acceptedBy?: string | null; // String
      canceled?: boolean | null; // Boolean
      canceledAt?: string | null; // String
      canceledBy?: string | null; // String
      canceledWhy?: string | null; // String
      pending?: boolean | null; // Boolean
      sold?: boolean | null; // Boolean
      soldAt?: string | null; // String
      soldBy?: string | null; // String
    }
  }
  Query: {
    orders: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}