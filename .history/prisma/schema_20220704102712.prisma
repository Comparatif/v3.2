// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Order {
  id                  String   @id @default(cuid())
  orderId             String   @unique
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  pending             Boolean  @default(true)
  accepted            Boolean  @default(false)
  canceledByUser      Boolean  @default(false)
  canceledByShop      Boolean  @default(false)
  canceledByAdmin     Boolean  @default(false)
  sold                Boolean  @default(false)
  acceptedAt          String?
  canceledByUserAt    String?
  canceledByShopAt    String?
  canceledByAdminAt   String?
  soldAt              String?

  
  userEmail     String?
  emailVerified DateTime?
  firstName     String?
  lastName      String?
  phoneNumber   String?
  countryName   String?
  city          String?
  user_commune  String?

  
  vendeurs            String
  villes1             String?
  adresses            String?
  telephone1          String?
  telephone2          String?
  fix1                String?
  shopEmail           String?
  facebook            String?
  instagram           String?
  horaires            String?
  localisation        String?
  shop_website        String?
  shop_commune        String?
  livraison           String?
  paiement            String?
  vendeurs_image      String?

  product_names       String   @db.VarChar(255)
  product_imagelinks  String?
  marques             String?
  categories          String?
  product_links       String?
  product_price       Int?
  stocks              String?
  product_country     String?
  product_commune     String?
  type                String?
  
}


model Settings {
  show_Shop          Boolean    @default(false)
  enableOrder        Boolean    @default(true)
  enableRightClick   Boolean    @default(false)
  lastUpdate         String?
  
}

model Auth {
  id                 Int       @id @default(autoincrement())
  email              String?
  shop               String?
  test               Boolean    @default(false)
  col                Int
  row                Int
  dashboard          Boolean    @default(false)
}

model Roles {
  legendaires          Legendaire[]
  epiques        Legendaire[]
  legendaires          Legendaire[]
}




